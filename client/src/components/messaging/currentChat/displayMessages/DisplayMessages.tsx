import { Virtuoso } from 'react-virtuoso';
import { useCallback } from 'react';
import { useAppSelector, useAppDispatch } from '../../../../hooks/useAppSelectorAndDispatch';
import getChatByIdThunk from '../../../../redux/thunks/getChatByIdThunk';
import Message from './Message';
import GenericMessage from './GenericMessage';
import Loading from '../../../reusable/Loading';
import './DisplayMessages.scss';

export const DisplayMessages = () => {
  const dispatch = useAppDispatch();
  const isLoading = useAppSelector((state) => state.currentChat.isLoading);
  const currentChat = useAppSelector((state) => state.currentChat);
  const currentUser = useAppSelector((state) => state.loggedInUser);


  // Load older messages when scrolling reaches the top
  const loadMore = useCallback(async () => {
    if (!isLoading && currentChat.chatId && currentChat.hasMoreMessages) {
      console.log('Loading more messages...', {
        currentLength: currentChat.messages.length,
        hasMore: currentChat.hasMoreMessages
      });

      try {
        const response = await dispatch(getChatByIdThunk(currentChat.chatId));
        console.log('Response from loading more:', response);
      } catch (error) {
        console.error('Error loading messages:', error);
      }
    } else {
      console.log('Skipping load more:', {
        isLoading,
        hasMore: currentChat.hasMoreMessages,
        currentLength: currentChat.messages.length
      });
    }
  }, [dispatch, isLoading, currentChat]);

  console.log(currentChat.messages);
  // Handle message rendering
  const MessageItem = useCallback(
    (index: number) => {
      const message = currentChat.messages[index];
      if (!message) {
        return <div className="message-row loading">Loading...</div>;
      }

      const isSender = currentUser.id === message.senderId;
      const isGeneric = message.isAutogenerated || message.isDeleted;

      return (
        <div className={`message-row ${isSender ? 'message-row--sender' : ''}`}>
          {isGeneric ? (
            <GenericMessage message={message} />
          ) : (
            <Message message={message} />
          )}
        </div>
      );
    },
    [currentChat.messages, currentUser.id]
  );


  if (!currentChat.messages?.length) {
    return <Loading />;
  }

  return (
    <div className="messages-scroll-container">
      <Virtuoso
        style={{ height: '100%' }}
        itemContent={MessageItem}
        startReached={loadMore}
        increaseViewportBy={200}
        data={currentChat.messages}
        
        reversed={true}
        components={{
          Footer: () => <div>Loading...</div>
        }}
      />
    </div>
  );
};
