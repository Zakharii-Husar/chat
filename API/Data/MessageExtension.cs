using API.Models;

namespace API.Data
{
    public static class MessageExtension
    {
        public static MessageDTO ToDTO(this Message message, string currentUserId)
        {
            return new MessageDTO
            {
                MessageId = message.MessageId,
                SenderId = message.SenderId,
                SenderUserName = message?.Sender?.UserName,
                SenderAvatarName = message?.Sender?.AvatarName,
                ChatId = message.ChatId,
                ChatName = message?.Chat?.ChatName,
                Content = !message.IsDeleted ? message?.Content : message?.Sender?.UserName + " deleted message.",
                SentAt = message.SentAt,
                IsDeleted = message.IsDeleted,
                IsAutogenerated = message.IsAutogenerated,
                Interlocutor = message.Chat.ChatMembers
                .Where(m => !m.Chat.IsGroupChat && m.MemberId != currentUserId)
                .Select(m => m.Member?.ToDTO())
                .FirstOrDefault(),
                Likes = message.Likes?.Select(like => like.User.ToDTO()).ToList(),
                SeenBy = message?.ReadReceipts?.Select(r => r.User.ToDTO()).ToList(),
                IsGroupChat = message.Chat.IsGroupChat
            };
        }

        public static SysMessageDTO ToSysMsgDTO(this Message message, string currentUserId, string type, SysMessagePayload payload)
        {
            var baseDTO = message.ToDTO(currentUserId);
            return new SysMessageDTO
            {
                MessageId = baseDTO.MessageId,
                SenderId = baseDTO.SenderId,
                SenderUserName = baseDTO.SenderUserName,
                SenderAvatarName = baseDTO.SenderAvatarName,
                ChatId = baseDTO.ChatId,
                ChatName = baseDTO.ChatName,
                Content = baseDTO.Content,
                SentAt = baseDTO.SentAt,
                IsDeleted = baseDTO.IsDeleted,
                IsAutogenerated = true,
                Interlocutor = baseDTO.Interlocutor,
                Likes = baseDTO.Likes,
                SeenBy = baseDTO.SeenBy,
                SenderIsOnline = baseDTO.SenderIsOnline,
                IsGroupChat = baseDTO.IsGroupChat,
                Type = type,
                Payload = payload
            };
        }
    }
}
